from .glob_variables import BotState
from .buttons import Buttons
from utils import db, TweetCapture
from telethon.errors.rpcerrorlist import MessageNotModifiedError


class BotMessageHandler:
    start_message = """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **Music Downloader!** üéß

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, –∏ —è –Ω–∞–π–¥—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –∑–∞–≥—Ä—É–∂–∞–µ–º—ã–π —Ç—Ä–µ–∫. üé∂

–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, —á—Ç–æ —è –º–æ–≥—É, –≤–≤–µ–¥–∏—Ç–µ: /help
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∏–∂–µ.. üëá
"""

    instruction_message = """
üéß –ë–æ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –º—É–∑—ã–∫–∏ üéß

1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø–µ—Å–Ω—é –∏–∑ Spotify/YouTube üîó
2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ üì£
3. –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª –ø–µ—Å–Ω–∏ üíæ
4. –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—Ä–∞–∑—Ü–æ–º –ø–µ—Å–Ω–∏ 
   –¥–ª—è –ª—É—á—à–µ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏ –¥–µ—Ç–∞–ª–µ–π üé§üîçüì©
5. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Ç–µ–∫—Å—Ç—ã, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ –∏ —Ç.–¥. üìúüë®‚Äçüé§

üí° –°–æ–≤–µ—Ç: –ò—â–∏—Ç–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, —Ç–µ–∫—Å—Ç—É –∏–ª–∏ –¥—Ä—É–≥–∏–º –¥–µ—Ç–∞–ª—è–º!

üì∫ –ó–∞–≥—Ä—É–∑—á–∏–∫ YouTube üì∫

1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ YouTube üîó
2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ (–µ—Å–ª–∏ –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ) üé•
3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏ ‚è≥
4. –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª –≤–∏–¥–µ–æ üì§

üì∏ –ó–∞–≥—Ä—É–∑—á–∏–∫ Instagram üì∏

1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç/Reel/IGTV –≤ Instagram üîó
2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏ ‚è≥
3. –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª üì§

üê¶ TweetCapture üê¶

1. –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–≤–∏—Ç üîó
2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç üì∏
3. –ü–æ–ª—É—á–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç üñºÔ∏è
4. –î–ª—è –º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–°–∫–∞—á–∞—Ç—å –º–µ–¥–∏–∞" 
   –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ üì•


–î–ª—è –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å @azizkhabdullaev
        """

    search_result_message = """üéµ The following are the top search results that correspond to your query:
"""

    core_selection_message = """üéµ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏ üéµ

"""
    JOIN_CHANNEL_MESSAGE = """–ü–æ—Ö–æ–∂–µ, –≤—ã –µ—â–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."""

    search_playlist_message = """–í –ø–ª–µ–π–ª–∏—Å—Ç–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Å–Ω–∏:
:"""

    @staticmethod
    async def send_message(event, text, buttons=None):
        chat_id = event.chat_id
        user_id = event.sender_id
        await BotState.initialize_user_state(user_id)
        await BotState.BOT_CLIENT.send_message(chat_id, text, buttons=buttons)

    @staticmethod
    async def edit_message(event, message_text, buttons=None):
        user_id = event.sender_id

        await BotState.initialize_user_state(user_id)
        try:
            await event.edit(message_text, buttons=buttons)
        except MessageNotModifiedError:
            pass

    @staticmethod
    async def edit_quality_setting_message(e):
        music_quality = await db.get_user_music_quality(e.sender_id)
        if music_quality:
            message = (f"Your Quality Setting:\nFormat: {music_quality['format']}\nQuality: {music_quality['quality']}"
                       f"\n\nAvailable Qualities :")
        else:
            message = "No quality settings found."
        await BotMessageHandler.edit_message(e, message, buttons=Buttons.get_quality_setting_buttons(music_quality))

    @staticmethod
    async def edit_core_setting_message(e):
        downloading_core = await db.get_user_downloading_core(e.sender_id)
        if downloading_core:
            message = BotMessageHandler.core_selection_message + f"\nCore: {downloading_core}"
        else:
            message = BotMessageHandler.core_selection_message + "\nNo core setting found."
        await BotMessageHandler.edit_message(e, message, buttons=Buttons.get_core_setting_buttons(downloading_core))

    @staticmethod
    async def edit_subscription_status_message(e):
        is_subscribed = await db.is_user_subscribed(e.sender_id)
        message = f"Subscription settings:\n\nYour Subscription Status: {is_subscribed}"
        await BotMessageHandler.edit_message(e, message,
                                             buttons=Buttons.get_subscription_setting_buttons(is_subscribed))

    @staticmethod
    async def edit_tweet_capture_setting_message(e):
        night_mode = await TweetCapture.get_settings(e.sender_id)
        mode = night_mode['night_mode']
        mode_to_show = "Light"
        match mode:
            case "1":
                mode_to_show = "Dark"
            case "2":
                mode_to_show = "Black"
        message = f"Tweet capture settings:\n\nYour Night Mode: {mode_to_show}"
        await BotMessageHandler.edit_message(e, message, buttons=Buttons.get_tweet_capture_setting_buttons(mode))
